<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>營北國中載具借用系統</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    :root {
      --primary-color: #0d6efd;
      --secondary-color: #e9ecef;
    }
    
    body {
      font-family: '微軟正黑體', sans-serif;
      background-color: var(--secondary-color);
    }
    
    .navbar {
      background-color: var(--primary-color) !important;
    }
    
    .container {
      max-width: 1200px;
      margin: 20px auto;
    }
    
    .table th {
      background-color: var(--primary-color);
      color: white;
    }
    
    .table td {
      vertical-align: middle;
    }
    
    .btn-primary {
      background-color: var(--primary-color);
    }
    
    .login-form {
      max-width: 400px;
      margin: 0 auto;
      padding: 20px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    .schedule-cell {
      min-width: 150px;
    }

    .not-available {
      background-color: #dbd5d5 !important;
    }

    .permanent-blocked {
      background-color: #c9b3b3 !important;
    }

    .reserved {
      background-color: #f2ecb6 !important;
    }

    .admin-controls {
      margin: 15px 0;
      padding: 10px;
      background-color: #f8f9fa;
      border-radius: 5px;
    }

    .status-indicator {
      padding: 5px 10px;
      margin-right: 10px;
      border-radius: 3px;
      font-size: 0.9em;
    }

    .loading {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(255, 255, 255, 0.9);
      padding: 20px;
      border-radius: 5px;
      display: none;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">營北國中載具借用系統</a>
      <div class="d-flex align-items-center">
        <span id="lastUpdate" class="text-light me-3" style="font-size: 0.9em;"></span>
        <button id="loginBtn" class="btn btn-light">管理者登入</button>
        <button id="logoutBtn" class="btn btn-light ms-2" style="display: none;">登出</button>
      </div>
    </div>
  </nav>

  <div class="container">
    <div class="alert alert-info" role="alert">
      系統將每5分鐘自動更新一次資料。最後更新時間顯示在右上角。
    </div>

    <div class="admin-controls" style="display: none;">
      <h5>管理者控制面板</h5>
      <div class="btn-group">
        <button id="saveBtn" class="btn btn-primary">儲存修改</button>
        <button id="exportBtn" class="btn btn-secondary">匯出資料</button>
        <button id="importBtn" class="btn btn-secondary">匯入資料</button>
      </div>
      <input type="file" id="fileInput" accept=".json" style="display: none;">
    </div>

    <div class="row mb-3">
      <div class="col-md-4">
        <select id="roomSelect" class="form-select">
          <option value="ipad">iPad教室</option>
          <option value="chromebook">Chromebook教室</option>
          <option value="chromebook-backup">備用Chromebook教室</option>
        </select>
      </div>
      <div class="col-md-4">
        <select id="weekSelect" class="form-select"></select>
      </div>
      <div class="col-md-4">
        <div class="btn-group w-100">
          <button id="prevWeek" class="btn btn-primary">上一週</button>
          <button id="nextWeek" class="btn btn-primary">下一週</button>
        </div>
      </div>
    </div>

    <div class="table-responsive">
      <table class="table table-bordered">
        <thead>
          <tr>
            <th>節次</th>
            <th>週一</th>
            <th>週二</th>
            <th>週三</th>
            <th>週四</th>
            <th>週五</th>
            <th>週六</th>
          </tr>
        </thead>
        <tbody id="scheduleBody"></tbody>
      </table>
    </div>
  </div>

  <!-- 登入對話框 -->
  <div class="modal fade" id="loginModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">管理者登入</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="loginForm">
            <div class="mb-3">
              <label class="form-label">帳號</label>
              <input type="text" class="form-control" id="username" required>
            </div>
            <div class="mb-3">
              <label class="form-label">密碼</label>
              <input type="password" class="form-control" id="password" required>
            </div>
            <button type="submit" class="btn btn-primary">登入</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <div id="loadingIndicator" class="loading">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">載入中...</span>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // 設定
    const GITHUB_USERNAME = "your-username";  // 更改為您的GitHub帳號
    const GITHUB_REPO = "your-repo";          // 更改為您的Repository名稱
    const GITHUB_PATH = "schedule-data.json";  // 資料檔案路徑
    const GITHUB_TOKEN = "your-token";        // 您的GitHub Personal Access Token
    const ADMIN_USERNAME = "admin";           // 更改為您的管理者帳號
    const ADMIN_PASSWORD = "password";        // 更改為您的管理者密碼

    // 全域變數
    let isAdmin = false;
    let currentWeek = getCurrentWeek();
    const teachers = ['李靜汝', '田慧晶', '江佳容', '林怡彣', '李立德', '李雯琪', '張心怡', '洪錦男', '許志豪', '林明輝', '林淑楨', '林秀貞', '黃綉媛', '王耀賢', '莊雅如', '陳怡妏', '陳育德', '蕭慧純', '李蕎至', '蔡呈熙', '李宜芳', '鄧伊芳', '曾柏蓉', '魏俊益', '崔愉雯', '徐錫穎', '張茱貽', '張智鈞', '洪振民', '林佳蓉', '張瀞云', '陳立崗', '徐嘉禧', '楊海萍', '鍾菁菁', '吳政翰', '許淑智', '曾怡儒', '蘇琮筆'];
    const weekDates = ["0101~0107", "0108~0114", "0115~0121", "0122~0128", "0129~0204", "0205~0211", "0212~0218", "0219~0225", "0226~0303", "0304~0310", "0311~0317", "0318~0324", "0325~0331", "0401~0407", "0408~0414", "0415~0421", "0422~0428", "0429~0505", "0506~0512", "0513~0519", "0520~0526", "0527~0602", "0603~0609", "0610~0616", "0617~0623", "0624~0630", "0701~0707", "0708~0714", "0715~0721", "0722~0728", "0729~0804", "0805~0811", "0812~0818", "0819~0825", "0826~0901", "0902~0908", "0909~0915", "0916~0922", "0923~0929", "0930~1006", "1007~1013", "1014~1020", "1021~1027", "1028~1103", "1104~1110", "1111~1117", "1118~1124", "1125~1201", "1202~1208", "1209~1215", "1216~1222", "1223~1229", "1230~1231"];

    // 預設資料結構
    let scheduleData = {
      ipad: Array(52).fill().map(() => Array(8).fill().map(() => Array(6).fill().map(() => ({
        teacher: '',
        status: 'available',
        permanentBlocked: false
      })))),
      chromebook: Array(52).fill().map(() => Array(8).fill().map(() => Array(6).fill().map(() => ({
        teacher: '',
        status: 'available',
        permanentBlocked: false
      })))),
      'chromebook-backup': Array(52).fill().map(() => Array(8).fill().map(() => Array(6).fill().map(() => ({
        teacher: '',
        status: 'available',
        permanentBlocked: false
      }))))
    };

    // 功能函數
    function showLoading() {
      document.getElementById('loadingIndicator').style.display = 'block';
    }

    function hideLoading() {
      document.getElementById('loadingIndicator').style.display = 'none';
    }

    function getCurrentWeek() {
      const today = new Date();
      const startYear = new Date(today.getFullYear(), 0, 1);
      const diffTime = Math.abs(today - startYear);
      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
      return Math.ceil(diffDays / 7);
    }

    function updateLastUpdateTime() {
      const now = new Date();
      document.getElementById('lastUpdate').textContent = 
        `最後更新: ${now.getFullYear()}/${(now.getMonth()+1).toString().padStart(2,'0')}/${now.getDate().toString().padStart(2,'0')} ${now.getHours().toString().padStart(2,'0')}:${now.getMinutes().toString().padStart(2,'0')}`;
    }

    async function loadScheduleData() {
      showLoading();
      try {
        const response = await fetch(`https://raw.githubusercontent.com/${GITHUB_USERNAME}/${GITHUB_REPO}/main/${GITHUB_PATH}?${Date.now()}`);
        if (response.ok) {
          const data = await response.json();
          Object.assign(scheduleData, data);
          updateSchedule();
          updateLastUpdateTime();
        }
      } catch (error) {
        console.error('載入資料失敗:', error);
      } finally {
        hideLoading();
      }
    }

    async function saveScheduleData() {
      if (!isAdmin) {
        alert('需要管理者權限');
        return;
      }

      showLoading();
      try {
        // 取得目前檔案的 SHA
        const getShaResponse = await fetch(`https://api.github.com/repos/${GITHUB_USERNAME}/${GITHUB_REPO}/contents/${GITHUB_PATH}`, {
          headers: {
            'Authorization': `token ${GITHUB_TOKEN}`,
          }
        });
        const fileInfo = await getShaResponse.json();
        const sha = fileInfo.sha;

        // 更新檔案
        const response = await fetch(`https://api.github.com/repos/${GITHUB_USERNAME}/${GITHUB_REPO}/contents/${GITHUB_PATH}`, {
          method: 'PUT',
          headers: {
            'Authorization': `token ${GITHUB_TOKEN}`,
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            message: '更新排程資料',
            content: btoa(unescape(encodeURIComponent(JSON.stringify(scheduleData)))),
            sha: sha
          })
        });

        if (response.ok) {
          alert('資料已成功儲存！');
          updateLastUpdateTime();
        } else {
          throw new Error('儲存失敗');
        }
      } catch (error) {
        console.error('儲存資料失敗:', error);
        alert('儲存資料失敗，請稍後再試');
      } finally {
        hideLoading();
      }
    }

    function exportSchedule() {
      const dataStr = JSON.stringify(scheduleData, null, 2);
      const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);
      const exportFileDefaultName = `schedule_data_${new Date().toISOString().slice(0,10)}.json`;
      const linkElement = document.createElement('a');
      linkElement.setAttribute('href', dataUri);
      linkElement.setAttribute('download', exportFileDefaultName);
      linkElement.click();
    }

    function importSchedule(file) {
      if (!isAdmin) {
        alert('需要管理者權限');
        return;
      }

      const reader = new FileReader();
      reader.onload = async function(e) {
        try {
          const importedData = JSON.parse(e.target.result);
          Object.assign(scheduleData, importedData);
          await saveScheduleData();
          updateSchedule();
        } catch (error) {
          alert('檔案格式錯誤！');
        }
      };
      reader.readAsText(file);
    }

    function initWeekSelect() {
      const weekSelect = document.getElementById('weekSelect');
      weekSelect.innerHTML = '';
      for (let i = 1; i <= 52; i++) {
        const option = document.createElement('option');
        option.value = i;
        option.textContent = `第${i}週 (${weekDates[i - 1]})`;
        weekSelect.appendChild(option);
      }
      weekSelect.value = currentWeek;
    }

    function updateSchedule() {
      const scheduleBody = document.getElementById('scheduleBody');
      const room = document.getElementById('roomSelect').value;
      scheduleBody.innerHTML = '';
      
      for (let period = 1; period <= 8; period++) {
        const row = document.createElement('tr');
        row.innerHTML = `<th>${period}</th>`;
        
        for (let day = 0; day < 6; day++) {
          const cell = document.createElement('td');
          cell.className = 'schedule-cell';
          const cellData = scheduleData[room][currentWeek - 1][period - 1][day];
          
          if (isAdmin) {
            const select = document.createElement('select');
            select.className = 'form-select';
            
            // 建立選項
            let options = `
              <option value="available">可借用</option>
              <option value="blocked">不可借用</option>
              <option value="permanent-blocked">永久不可借用</option>
              ${teachers.map(t => `<option value="${t}">${t}</option>`).join('')}
            `;
            select.innerHTML = options;
            
            // 設定目前狀態
            if (cellData.permanentBlocked) {
              select.value = 'permanent-blocked';
              cell.classList.add('permanent-blocked');
            } else if (cellData.status === 'blocked') {
              select.value = 'blocked';
              cell.classList.add('not-available');
            } else if (cellData.teacher) {
              select.value = cellData.teacher;
              cell.classList.add('reserved');
            }
            
            // 處理變更
            select.addEventListener('change', e => {
              const value = e.target.value;
              if (value === 'permanent-blocked') {
                for (let week = 0; week < 52; week++) {
                  scheduleData[room][week][period - 1][day].permanentBlocked = true;
                  scheduleData[room][week][period - 1][day].status = 'blocked';
                  scheduleData[room][week][period - 1][day].teacher = '';
                }
                cell.classList.add('permanent-blocked');
                cell.classList.remove('not-available', 'reserved');
              } else if (value === 'blocked') {
                cellData.status = 'blocked';
                cellData.teacher = '';
                cellData.permanentBlocked = false;
                cell.classList.add('not-available');
                cell.classList.remove('permanent-blocked', 'reserved');
              } else if (value === 'available') {
                cellData.status = 'available';
                cellData.teacher = '';
                cellData.permanentBlocked = false;
                cell.classList.remove('not-available', 'permanent-blocked', 'reserved');
              } else {
                cellData.status = 'reserved';
                cellData.teacher = value;
                cellData.permanentBlocked = false;
                cell.classList.add('reserved');
                cell.classList.remove('not-available', 'permanent-blocked');
              }
            });
            
            cell.appendChild(select);
          } else {
            // 一般使用者檢視模式
            if (cellData.permanentBlocked) {
              cell.textContent = '永久不可借用';
              cell.classList.add('permanent-blocked');
            } else if (cellData.status === 'blocked') {
              cell.textContent = '不可借用';
              cell.classList.add('not-available');
            } else if (cellData.teacher) {
              cell.textContent = `借用人: ${cellData.teacher}`;
              cell.classList.add('reserved');
            } else {
              cell.textContent = '可借用';
            }
          }
          
          row.appendChild(cell);
        }
        scheduleBody.appendChild(row);
      }
    }

    // 事件處理
    document.getElementById('loginBtn').addEventListener('click', () => {
      const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
      loginModal.show();
    });

    document.getElementById('logoutBtn').addEventListener('click', () => {
      isAdmin = false;
      document.querySelector('.admin-controls').style.display = 'none';
      document.getElementById('loginBtn').style.display = 'block';
      document.getElementById('logoutBtn').style.display = 'none';
      updateSchedule();
    });

    document.getElementById('loginForm').addEventListener('submit', e => {
      e.preventDefault();
      const username = document.getElementById('username').value;
      const password = document.getElementById('password').value;
      
      if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {
        isAdmin = true;
        document.querySelector('.admin-controls').style.display = 'block';
        document.getElementById('loginBtn').style.display = 'none';
        document.getElementById('logoutBtn').style.display = 'block';
        bootstrap.Modal.getInstance(document.getElementById('loginModal')).hide();
        updateSchedule();
      } else {
        alert('帳號或密碼錯誤！');
      }
    });

    document.getElementById('saveBtn').addEventListener('click', saveScheduleData);
    document.getElementById('exportBtn').addEventListener('click', exportSchedule);
    document.getElementById('importBtn').addEventListener('click', () => {
      document.getElementById('fileInput').click();
    });

    document.getElementById('fileInput').addEventListener('change', e => {
      if (e.target.files.length > 0) {
        importSchedule(e.target.files[0]);
      }
    });

    document.getElementById('weekSelect').addEventListener('change', e => {
      currentWeek = parseInt(e.target.value);
      updateSchedule();
    });

    document.getElementById('prevWeek').addEventListener('click', () => {
      if (currentWeek > 1) {
        currentWeek--;
        document.getElementById('weekSelect').value = currentWeek;
        updateSchedule();
      }
    });

    document.getElementById('nextWeek').addEventListener('click', () => {
      if (currentWeek < 52) {
        currentWeek++;
        document.getElementById('weekSelect').value = currentWeek;
        updateSchedule();
      }
    });

    document.getElementById('roomSelect').addEventListener('change', () => {
      updateSchedule();
    });

    // 自動更新功能
    function setupAutoReload() {
      // 每5分鐘重新載入一次資料
      setInterval(loadScheduleData, 5 * 60 * 1000);
    }

    // 初始化
    initWeekSelect();
    loadScheduleData();
    setupAutoReload();
  </script>
</body>
</html>
