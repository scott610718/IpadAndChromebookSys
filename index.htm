<html><head><base href=".">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>&#x71df;&#x5317;&#x570b;&#x4e2d;&#x8f09;&#x5177;&#x501f;&#x7528;&#x7cfb;&#x7d71;</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    :root {
      --primary-color: #0d6efd;
      --secondary-color: #e9ecef;
    }
    
    body {
      font-family: '微軟正黑體', sans-serif;
      background-color: var(--secondary-color);
    }
    
    .navbar {
      background-color: var(--primary-color) !important;
    }
    
    .container {
      max-width: 1200px;
      margin: 20px auto;
    }
    
    .table th {
      background-color: var(--primary-color);
      color: white;
    }
    
    .table td {
      vertical-align: middle;
    }
    
    .btn-primary {
      background-color: var(--primary-color);
    }
    
    .login-form {
      max-width: 400px;
      margin: 0 auto;
      padding: 20px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    .schedule-cell {
      min-width: 150px;
    }

    .not-available {
      background-color: #dbd5d5 !important;
    }

    .permanent-blocked {
      background-color: #c9b3b3 !important;
    }

    .reserved {
      background-color: #f2ecb6 !important;
    }

    .admin-controls {
      margin-bottom: 15px;
    }

    #fileInput {
      display: none;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">&#x71df;&#x5317;&#x570b;&#x4e2d;&#x8f09;&#x5177;&#x501f;&#x7528;&#x7cfb;&#x7d71;</a>
      <div>
        <button id="loginBtn" class="btn btn-light">&#x7ba1;&#x7406;&#x8005;&#x767b;&#x5165;</button>
      </div>
    </div>
  </nav>

  <div class="container">
    <div class="admin-controls" style="display: none;">
      <button id="exportBtn" class="btn btn-secondary">&#x8f38;&#x51fa;&#x6a94;&#x6848;</button>
      <button id="importBtn" class="btn btn-secondary">&#x532f;&#x5165;&#x6a94;&#x6848;</button>
      <input type="file" id="fileInput" accept=".json">
    </div>

    <div class="row mb-3">
      <div class="col">
        <select id="roomSelect" class="form-select">
          <option value="ipad">iPad&#x6559;&#x5ba4;</option>
          <option value="chromebook">Chromebook&#x6559;&#x5ba4;</option>
          <option value="chromebook-backup">&#x5099;&#x7528;Chromebook&#x6559;&#x5ba4;</option>
        </select>
      </div>
      <div class="col">
        <select id="weekSelect" class="form-select">
        </select>
      </div>
      <div class="col">
        <button id="prevWeek" class="btn btn-primary">&#x4e0a;&#x4e00;&#x9031;</button>
        <button id="nextWeek" class="btn btn-primary">&#x4e0b;&#x4e00;&#x9031;</button>
      </div>
    </div>

    <div class="table-responsive">
      <table class="table table-bordered">
        <thead>
          <tr>
            <th>&#x7bc0;&#x6b21;</th>
            <th>&#x9031;&#x4e00;</th>
            <th>&#x9031;&#x4e8c;</th>
            <th>&#x9031;&#x4e09;</th>
            <th>&#x9031;&#x56db;</th>
            <th>&#x9031;&#x4e94;</th>
            <th>&#x9031;&#x516d;</th>
          </tr>
        </thead>
        <tbody id="scheduleBody">
        </tbody>
      </table>
    </div>
  </div>

  <!-- Login Modal -->
  <div class="modal fade" id="loginModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">&#x7ba1;&#x7406;&#x8005;&#x767b;&#x5165;</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="loginForm">
            <div class="mb-3">
              <label class="form-label">&#x5e33;&#x865f;</label>
              <input type="text" class="form-control" id="username" required>
            </div>
            <div class="mb-3">
              <label class="form-label">&#x5bc6;&#x78bc;</label>
              <input type="password" class="form-control" id="password" required>
            </div>
            <button type="submit" class="btn btn-primary">&#x767b;&#x5165;</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>const ADMIN_USERNAME = "114";
const ADMIN_PASSWORD = "114";
let isAdmin = false;
function getCurrentWeek() {
  const today = new Date(2024, 0, 11);
  const startYear = new Date(2024, 0, 1);
  const diffTime = Math.abs(today - startYear);
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  return Math.ceil(diffDays / 7);
}
let currentWeek = getCurrentWeek();
const teachers = ['李靜汝', '田慧晶', '江佳容', '林怡彣', '李立德', '李雯琪', '張心怡', '洪錦男', '許志豪', '林明輝', '林淑楨', '林秀貞', '黃綉媛', '王耀賢', '莊雅如', '陳怡妏', '陳育德', '蕭慧純', '李蕎至', '蔡呈熙', '李宜芳', '鄧伊芳', '曾柏蓉', '魏俊益', '崔愉雯', '徐錫穎', '張茱貽', '張智鈞', '洪振民', '林佳蓉', '張瀞云', '陳立崗', '徐嘉禧', '楊海萍', '鍾菁菁', '吳政翰', '許淑智', '曾怡儒', '蘇琮筆'];
const weekDates = ["0211~0216", "0217~0223", "0224~0302", "0303~0309", "0310~0316", "0317~0323", "0324~0330", "0331~0406", "0407~0413", "0414~0420", "0421~0427", "0428~0504", "0505~0511", "0512~0518", "0519~0525", "0526~0601", "0602~0608", "0609~0615", "0616~0622", "0623~0629"];
const scheduleData = {
  ipad: Array(52).fill().map(() => Array(8).fill().map(() => Array(6).fill().map(() => ({
    teacher: '',
    status: 'available',
    permanentBlocked: false
  })))),
  chromebook: Array(52).fill().map(() => Array(8).fill().map(() => Array(6).fill().map(() => ({
    teacher: '',
    status: 'available',
    permanentBlocked: false
  })))),
  'chromebook-backup': Array(52).fill().map(() => Array(8).fill().map(() => Array(6).fill().map(() => ({
    teacher: '',
    status: 'available',
    permanentBlocked: false
  }))))
};
function exportSchedule() {
  const dataStr = JSON.stringify(scheduleData);
  const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);
  const exportFileDefaultName = 'schedule_data.json';
  const linkElement = document.createElement('a');
  linkElement.setAttribute('href', dataUri);
  linkElement.setAttribute('download', exportFileDefaultName);
  linkElement.click();
}
function importSchedule(file) {
  const reader = new FileReader();
  reader.onload = function (e) {
    try {
      const importedData = JSON.parse(e.target.result);
      Object.assign(scheduleData, importedData);
      saveScheduleData();
      updateSchedule();
      alert('資料匯入成功！');
    } catch (error) {
      alert('檔案格式錯誤！');
    }
  };
  reader.readAsText(file);
}
function initWeekSelect() {
  const weekSelect = document.getElementById('weekSelect');
  weekSelect.innerHTML = '';
  for (let i = 1; i <= 52; i++) {
    const option = document.createElement('option');
    option.value = i;
    option.textContent = `第${i}週 (${weekDates[i - 1]})`;
    weekSelect.appendChild(option);
  }
  weekSelect.value = currentWeek;
}
function updateSchedule() {
  const scheduleBody = document.getElementById('scheduleBody');
  const room = document.getElementById('roomSelect').value;
  scheduleBody.innerHTML = '';
  for (let period = 1; period <= 8; period++) {
    const row = document.createElement('tr');
    row.innerHTML = `<th>${period}</th>`;
    for (let day = 0; day < 6; day++) {
      const cell = document.createElement('td');
      cell.className = 'schedule-cell';
      const cellData = scheduleData[room][currentWeek - 1][period - 1][day];
      if (isAdmin) {
        const select = document.createElement('select');
        select.className = 'form-select';
        select.innerHTML = `
              <option value="available">可借用</option>
              <option value="blocked">不可借用</option>
              <option value="permanent-blocked">永久不可借用</option>
              ${teachers.map(t => `<option value="${t}">${t}</option>`).join('')}
            `;
        if (cellData.permanentBlocked) {
          select.value = 'permanent-blocked';
          cell.classList.add('permanent-blocked');
        } else if (cellData.status === 'blocked') {
          select.value = 'blocked';
          cell.classList.add('not-available');
        } else if (cellData.teacher) {
          select.value = cellData.teacher;
          cell.classList.add('reserved');
        } else {
          cell.classList.remove('not-available', 'permanent-blocked', 'reserved');
        }
        select.addEventListener('change', e => {
          const value = e.target.value;
          if (value === 'permanent-blocked') {
            for (let week = 0; week < 52; week++) {
              scheduleData[room][week][period - 1][day].permanentBlocked = true;
              scheduleData[room][week][period - 1][day].status = 'blocked';
              scheduleData[room][week][period - 1][day].teacher = '';
            }
            cell.classList.add('permanent-blocked');
            cell.classList.remove('not-available', 'reserved');
            saveScheduleData();
          } else if (value === 'blocked') {
            cellData.status = 'blocked';
            cellData.teacher = '';
            cellData.permanentBlocked = false;
            cell.classList.add('not-available');
            cell.classList.remove('permanent-blocked', 'reserved');
            saveScheduleData();
          } else if (value === 'available') {
            cellData.status = 'available';
            cellData.teacher = '';
            cellData.permanentBlocked = false;
            cell.classList.remove('not-available', 'permanent-blocked', 'reserved');
            saveScheduleData();
          } else {
            cellData.status = 'reserved';
            cellData.teacher = value;
            cellData.permanentBlocked = false;
            cell.classList.add('reserved');
            cell.classList.remove('not-available', 'permanent-blocked');
            saveScheduleData();
          }
        });
        cell.appendChild(select);
      } else {
        if (cellData.permanentBlocked) {
          cell.textContent = '永久不可借用';
          cell.classList.add('permanent-blocked');
        } else if (cellData.status === 'blocked') {
          cell.textContent = '不可借用';
          cell.classList.add('not-available');
        } else if (cellData.teacher) {
          cell.textContent = `借用人: ${cellData.teacher}`;
          cell.classList.add('reserved');
        } else {
          cell.textContent = '可借用';
          cell.classList.remove('not-available', 'permanent-blocked', 'reserved');
        }
      }
      row.appendChild(cell);
    }
    scheduleBody.appendChild(row);
  }
}
function saveScheduleData() {
  localStorage.setItem('scheduleData', JSON.stringify(scheduleData));
}
function loadScheduleData() {
  const saved = localStorage.getItem('scheduleData');
  if (saved) {
    Object.assign(scheduleData, JSON.parse(saved));
  }
}
document.getElementById('loginBtn').addEventListener('click', () => {
  const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
  loginModal.show();
});
document.getElementById('loginForm').addEventListener('submit', e => {
  e.preventDefault();
  const username = document.getElementById('username').value;
  const password = document.getElementById('password').value;
  if (username === ADMIN_USERNAME && password === ADMIN_PASSWORD) {
    isAdmin = true;
    document.querySelector('.admin-controls').style.display = 'block';
    bootstrap.Modal.getInstance(document.getElementById('loginModal')).hide();
    updateSchedule();
  } else {
    alert('帳號或密碼錯誤！');
  }
});
document.getElementById('exportBtn').addEventListener('click', exportSchedule);
document.getElementById('importBtn').addEventListener('click', () => {
  document.getElementById('fileInput').click();
});
document.getElementById('fileInput').addEventListener('change', e => {
  if (e.target.files.length > 0) {
    importSchedule(e.target.files[0]);
  }
});
document.getElementById('weekSelect').addEventListener('change', e => {
  currentWeek = parseInt(e.target.value);
  updateSchedule();
});
document.getElementById('prevWeek').addEventListener('click', () => {
  if (currentWeek > 1) {
    currentWeek--;
    document.getElementById('weekSelect').value = currentWeek;
    updateSchedule();
  }
});
document.getElementById('nextWeek').addEventListener('click', () => {
  if (currentWeek < 52) {
    currentWeek++;
    document.getElementById('weekSelect').value = currentWeek;
    updateSchedule();
  }
});
document.getElementById('roomSelect').addEventListener('change', () => {
  updateSchedule();
});
loadScheduleData();
initWeekSelect();
updateSchedule();</script>
</body></html>
